{"ast":null,"code":"import _slicedToArray from \"/Users/justin/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/justin/Desktop/tech/tech-challenge/src/Qbs.js\";\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Modal from \"./components/Modal\";\nimport './style.css';\nimport { required } from \"nodemon/lib/config\";\n\nvar Qbcompare = function Qbcompare() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      players = _useState4[0],\n      setPlayers = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      person = _useState8[0],\n      setPerson = _useState8[1];\n\n  useEffect(function () {\n    axios.get('https://project.trumedianetworks.com/api/nfl/players', {\n      headers: {\n        'tempToken': 'd818a26a-a42d-4fc5-8ab7-44020a0dad5e'\n      }\n    }).then(function (res) {\n      setIsLoading(false);\n\n      if (res.data) {\n        setPlayers(res.data);\n      } else {\n        console.log('error');\n      }\n    }).catch(function (error) {\n      setIsLoading(false);\n      console.log('error', error);\n    });\n  }, []);\n\n  var handleClick = function handleClick(e) {\n    e.preventDefault();\n    setPerson(e.target.id);\n    setShow(true);\n  };\n\n  var playerList = players.map(function (player) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: player.playerId,\n      className: \"players\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"playername\",\n      onClick: function onClick(e) {\n        return handleClick(e);\n      },\n      id: player.playerId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, player.fullName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerimage\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: player.playerImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  });\n  var content = isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 32\n    }\n  }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 58\n    }\n  }, playerList));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }, content), show && /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    setShow: setShow,\n    person: person,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }\n  }));\n};\n\nexport default Qbcompare;","map":{"version":3,"sources":["/Users/justin/Desktop/tech/tech-challenge/src/Qbs.js"],"names":["axios","React","ReactDOM","Link","useState","useEffect","Modal","required","Qbcompare","isLoading","setIsLoading","players","setPlayers","show","setShow","person","setPerson","get","headers","then","res","data","console","log","catch","error","handleClick","e","preventDefault","target","id","playerList","map","player","playerId","fullName","playerImage","content"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom'\nimport {Link} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Modal from \"./components/Modal\";\n\n\nimport './style.css' \nimport { required } from \"nodemon/lib/config\";\n\n\n\n\n\nconst Qbcompare = () => {\n  const [isLoading, setIsLoading] =useState(true);\n  const [players, setPlayers] = useState ([]);\n  const [show, setShow] = useState(false);\n  const [person, setPerson] =useState();\n\n  useEffect (() => {\n    axios.get('https://project.trumedianetworks.com/api/nfl/players', {\n      headers: {\n          'tempToken': 'd818a26a-a42d-4fc5-8ab7-44020a0dad5e',\n        }\n      })\n      .then((res) => {\n        setIsLoading(false)\n        \n  \n      if (res.data) {\n  \n        setPlayers(res.data);\n      }else{\n        console.log('error')\n      }\n    })\n    .catch(error => {\n      setIsLoading(false)\n      console.log('error', error);\n    });\n    \n  }, []);\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    setPerson(e.target.id)\n    setShow(true) \n    \n\n  };\n\n  const playerList = players.map(player => {\n  return (\n    <div key={player.playerId} className=\"players\" >\n      <p className=\"playername\" onClick={(e) => handleClick(e)} id={player.playerId}>{player.fullName}</p>\n        <div className=\"playerimage\">\n          <img src={player.playerImage}></img> \n        </div>\n    </div>\n    )\n})\n  const content = isLoading  ? <div>Loading</div> : <div><pre>{playerList}</pre></div>\n  \n  \n  return (\n  <>\n     <h1>{content}</h1>\n      {show && <Modal show={show} setShow={setShow} person={person}/>}\n\n  </>\n  )\n\n\n}\n\nexport default Qbcompare;\n\n"]},"metadata":{},"sourceType":"module"}