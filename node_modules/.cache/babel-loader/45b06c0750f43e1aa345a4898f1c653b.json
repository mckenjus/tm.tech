{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/tech/tech-challenge/src/Machine.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { useState, useEffect } from \"react\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Machine = id => {\n  _s();\n\n  const playerId = window.location.pathname.replace(\"/machine/\", \"\");\n  console.log(playerId);\n  const [isLoading, setIsLoading] = useState(true);\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios.get(`https://project.trumedianetworks.com/api/nfl/player/${id}`, {\n      headers: {\n        'tempToken': 'd818a26a-a42d-4fc5-8ab7-44020a0dad5e'\n      }\n    }).then(res => {\n      setIsLoading(false);\n      console.log(res.data);\n\n      if (res.data) {\n        setPlayers(res.data);\n      } else {\n        console.log('error');\n      }\n    }).catch(error => {\n      setIsLoading(false);\n      console.log('error', error);\n    });\n  };\n\n  const playerList = players.map(player => {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `/machine/${player.playerId}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"players\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"playername\",\n          children: player.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerimage\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: player.playerImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this);\n  });\n  const content = isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 32\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: playerList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 58\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 53\n  }, this);\n  console.log(players);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Machine, \"Zl2YfvsvFp1P43ifAeFVgsiqVko=\");\n\n_c = Machine;\nexport default Machine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Machine\");","map":{"version":3,"sources":["/Users/justin/Desktop/tech/tech-challenge/src/Machine.js"],"names":["axios","React","ReactDOM","useState","useEffect","Machine","id","playerId","window","location","pathname","replace","console","log","isLoading","setIsLoading","players","setPlayers","getData","get","headers","then","res","data","catch","error","playerList","map","player","fullName","playerImage","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,aAAP;;;AAEA,MAAMC,OAAO,GAAIC,EAAD,IAAQ;AAAA;;AACpB,QAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,WAAjC,EAA8C,EAA9C,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA2BZ,QAAQ,CAAC,IAAD,CAAzC;AACF,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAE,EAAF,CAAtC;AACAC,EAAAA,SAAS,CAAE,MAAM;AACfc,IAAAA,OAAO;AAER,GAHQ,EAGN,EAHM,CAAT;;AAIA,QAAMA,OAAO,GAAG,MAAM;AACpBlB,IAAAA,KAAK,CAACmB,GAAN,CAAW,uDAAsDb,EAAG,EAApE,EAAuE;AACvEc,MAAAA,OAAO,EAAE;AACL,qBAAa;AADR;AAD8D,KAAvE,EAKDC,IALC,CAKKC,GAAD,IAAS;AACbP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,IAAhB;;AAEA,UAAID,GAAG,CAACC,IAAR,EAAc;AAEZN,QAAAA,UAAU,CAACK,GAAG,CAACC,IAAL,CAAV;AACD,OAHD,MAGK;AACHX,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AAGF,KAjBC,EAkBDW,KAlBC,CAkBKC,KAAK,IAAI;AACdV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBY,KAArB;AACD,KArBC;AAuBD,GAxBD;;AAyBA,QAAMC,UAAU,GAAGV,OAAO,CAACW,GAAR,CAAYC,MAAM,IAAI;AACzC,wBAEE;AAAG,MAAA,IAAI,EAAG,YAAWA,MAAM,CAACrB,QAAS,EAArC;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCAEC;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBAA2BqB,MAAM,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACC;AAAK,YAAA,GAAG,EAAED,MAAM,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFF;AAeD,GAhBoB,CAAnB;AAiBA,QAAMC,OAAO,GAAGjB,SAAS,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ,gBAAyB;AAAA,2BAAK;AAAA,gBAAMY;AAAN;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAlD;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,sBAAO;AAAA,cAAKe;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAxDD;;GAAM1B,O;;KAAAA,O;AA6DN,eAAeA,OAAf","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom'\nimport { useState, useEffect } from \"react\";\n\nimport './style.css' \n\nconst Machine = (id) => {\n    const playerId = window.location.pathname.replace(\"/machine/\", \"\");\n    console.log(playerId)\n    const [isLoading, setIsLoading] =useState(true);\n  const [players, setPlayers] = useState ([]);\n  useEffect (() => {\n    getData();\n    \n  }, [])\n  const getData = () => {\n    axios.get(`https://project.trumedianetworks.com/api/nfl/player/${id}`, {\n    headers: {\n        'tempToken': 'd818a26a-a42d-4fc5-8ab7-44020a0dad5e',\n    }\n  })\n  .then((res) => {\n    setIsLoading(false)\n    console.log(res.data);\n\n    if (res.data) {\n\n      setPlayers(res.data);\n    }else{\n      console.log('error')\n    }\n   \n\n  })\n  .catch(error => {\n    setIsLoading(false)\n    console.log('error', error);\n  })\n\n  }\n  const playerList = players.map(player => {\n  return (\n    \n    <a href={`/machine/${player.playerId}`}>\n    <div className=\"players\" >\n    \n     <p className=\"playername\">{player.fullName}</p>\n     <div className=\"playerimage\">\n      <img src={player.playerImage}></img> \n     </div>\n \n      \n    </div>\n     \n    </a>\n    )\n})\n  const content = isLoading  ? <div>Loading</div> : <div><pre>{playerList}</pre></div>\n  console.log(players)\n  return <h1>{content}</h1>\n\n\n}\n\n\n\n\nexport default Machine;"]},"metadata":{},"sourceType":"module"}